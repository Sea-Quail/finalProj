name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql
          sudo systemctl enable mysql

      - name: Reset MySQL root password
        run: |
          # Start MySQL with --skip-grant-tables so we can reset the root password
          sudo systemctl stop mysql
          sudo mysqld_safe --skip-grant-tables &

          # Wait for MySQL to start with no authentication
          sleep 10

          # Update root password without authentication
          sudo mysql -e "UPDATE mysql.user SET authentication_string = PASSWORD('root') WHERE User = 'root' AND Host = 'localhost';"
          sudo mysql -e "FLUSH PRIVILEGES;"

          # Stop the MySQL instance and restart it normally
          sudo systemctl stop mysql
          sudo systemctl start mysql

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          MAX_RETRIES=20
          RETRY_INTERVAL=5
          TRIES=0
          until mysqladmin -uroot -proot ping --silent; do
            if [ "$TRIES" -ge "$MAX_RETRIES" ]; then
              echo "MySQL did not become ready in time."
              exit 1
            fi
            echo "Waiting for MySQL..."
            sleep $RETRY_INTERVAL
            TRIES=$((TRIES+1))
          done

      - name: Run update_db.py
        env:
          MYSQL_HOST: localhost
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_DATABASE: seaquail
        run: python3 dbSetup/update_db.py

      - name: Print MySQL logs on failure
        if: failure()
        run: sudo journalctl -u mysql || echo "No MySQL logs found."
